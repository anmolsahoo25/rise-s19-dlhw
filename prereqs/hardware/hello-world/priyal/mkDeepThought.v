//
// Generated by Bluespec Compiler, version 2018.10.beta1 (build e1df8052c, 2018-10-17)
//
// On Thu May 23 16:42:29 IST 2019
//
//
// Ports:
// Name                         I/O  size props
// RDY_whatIsTheAnswer            O     1
// getAnswer                      O    32 const
// RDY_getAnswer                  O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// EN_whatIsTheAnswer             I     1
// EN_getAnswer                   I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkDeepThought(CLK,
		     RST_N,

		     EN_whatIsTheAnswer,
		     RDY_whatIsTheAnswer,

		     EN_getAnswer,
		     getAnswer,
		     RDY_getAnswer);
  input  CLK;
  input  RST_N;

  // action method whatIsTheAnswer
  input  EN_whatIsTheAnswer;
  output RDY_whatIsTheAnswer;

  // actionvalue method getAnswer
  input  EN_getAnswer;
  output [31 : 0] getAnswer;
  output RDY_getAnswer;

  // signals for module outputs
  wire [31 : 0] getAnswer;
  wire RDY_getAnswer, RDY_whatIsTheAnswer;

  // register rg_half_millenia
  reg [3 : 0] rg_half_millenia;
  wire [3 : 0] rg_half_millenia$D_IN;
  wire rg_half_millenia$EN;

  // register rg_state_dt
  reg [1 : 0] rg_state_dt;
  reg [1 : 0] rg_state_dt$D_IN;
  wire rg_state_dt$EN;

  // inputs to muxes for submodule ports
  wire [3 : 0] MUX_rg_half_millenia$write_1__VAL_1;
  wire MUX_rg_half_millenia$write_1__SEL_1, MUX_rg_state_dt$write_1__SEL_1;

  // action method whatIsTheAnswer
  assign RDY_whatIsTheAnswer = rg_state_dt == 2'd0 ;

  // actionvalue method getAnswer
  assign getAnswer = 32'd42 ;
  assign RDY_getAnswer = rg_state_dt == 2'd2 ;

  // inputs to muxes for submodule ports
  assign MUX_rg_half_millenia$write_1__SEL_1 =
	     rg_state_dt == 2'd1 && rg_half_millenia != 4'd15 ;
  assign MUX_rg_state_dt$write_1__SEL_1 =
	     rg_state_dt == 2'd1 && rg_half_millenia == 4'd15 ;
  assign MUX_rg_half_millenia$write_1__VAL_1 = rg_half_millenia + 4'd1 ;

  // register rg_half_millenia
  assign rg_half_millenia$D_IN =
	     MUX_rg_half_millenia$write_1__SEL_1 ?
	       MUX_rg_half_millenia$write_1__VAL_1 :
	       4'd0 ;
  assign rg_half_millenia$EN =
	     rg_state_dt == 2'd1 && rg_half_millenia != 4'd15 ||
	     EN_getAnswer ;

  // register rg_state_dt
  always@(MUX_rg_state_dt$write_1__SEL_1 or
	  EN_getAnswer or EN_whatIsTheAnswer)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_state_dt$write_1__SEL_1: rg_state_dt$D_IN = 2'd2;
      EN_getAnswer: rg_state_dt$D_IN = 2'd0;
      EN_whatIsTheAnswer: rg_state_dt$D_IN = 2'd1;
      default: rg_state_dt$D_IN = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign rg_state_dt$EN =
	     rg_state_dt == 2'd1 && rg_half_millenia == 4'd15 ||
	     EN_getAnswer ||
	     EN_whatIsTheAnswer ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_half_millenia <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_state_dt <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (rg_half_millenia$EN)
	  rg_half_millenia <= `BSV_ASSIGNMENT_DELAY rg_half_millenia$D_IN;
	if (rg_state_dt$EN)
	  rg_state_dt <= `BSV_ASSIGNMENT_DELAY rg_state_dt$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_half_millenia = 4'hA;
    rg_state_dt = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_state_dt == 2'd1)
	$write("DeepThought: ... thinking ... (%0d", rg_half_millenia[3:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_state_dt == 2'd1 && rg_half_millenia[0]) $write(".5");
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_state_dt == 2'd1) $display(" million years)");
  end
  // synopsys translate_on
endmodule  // mkDeepThought

